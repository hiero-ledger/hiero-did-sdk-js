@startuml create-did-dependencies
DIDRegistrarUtils --> Signer
DIDRegistrarUtils --> Publisher
DIDRegistar --> DIDRegistrarUtils
CreateDIDResult --> DIDDocument
DIDRegistar --> Providers
DIDRegistar --> Options
Providers --> ClientOptions
DIDRegistar --> CreateDIDResult
ClientOptions --> PrivateKey
CreateDIDResult --> PrivateKey
Options --> PrivateKey
Publisher --> Transaction
Publisher --> TransactionReceipt
Providers --> Client


class DIDRegistar {
   + create(providersOrOptions: Providers | Options, providers?: Providers) : CreateDIDResult
}

class DIDRegistrarUtils {
   # getPublisher() : Publisher
   # getSigner() : Signer
}

interface CreateDIDResult {
   String did
   DIDDocument didDocument
   PrivateKey privateKey?
}

interface Providers {
   Signer signer?
   Publisher publisher?
   Client | ClientOptions client
}

interface ClientOptions {
   String | PrivateKey privateKey
   String accountId
   String network
}

interface Options {
   String controller?
   String topicId?
   String | PrivateKey privateKey
}


abstract class Signer {
   {abstract} + String publicKey
   {abstract} + sign(message: Uint8Array) : Uint8Array
}

abstract class Publisher {
   {abstract} + Client client
   {abstract} + publish(transaction: Transaction) : TransactionReceipt
}

interface DIDDocument {
   String id
   String controller
   VerificationMethod[] verificationMethod
}

class PrivateKey << (S,#FF7700) Hedera SDK >>
class Transaction << (S,#FF7700) Hedera SDK >>
class TransactionReceipt << (S,#FF7700) Hedera SDK >>
class Client << (S,#FF7700) Hedera SDK >>
@enduml