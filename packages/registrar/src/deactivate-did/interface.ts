import { DIDDocument } from '@swiss-digital-assets-institute/core';
import { PrivateKey } from '@hashgraph/sdk';
import { CommonRegistrarOptions } from '../interfaces/common-options';
import { RunnerState } from '@swiss-digital-assets-institute/lifecycle';
import { DIDDeactivateMessage } from '@swiss-digital-assets-institute/messages';
import { SigningRequest } from '../interfaces';

export interface DeactivateDIDOptions extends CommonRegistrarOptions {
  /**
   * The DID to deactivate
   */
  did: string;

  /**
   * The private key to use to sign the deactivate operation.
   * If Signer is provided, this field is ignored.
   */
  privateKey?: string | PrivateKey;
}

export interface DeactivateDIDResult {
  /**
   * The DID that was deactivated
   */
  did: string;

  /**
   * The updated DID document after deactivation
   */
  didDocument: DIDDocument;
}

export interface DeactivateDIDRequest {
  /**
   * The state of the current operation.
   */
  state: RunnerState<DIDDeactivateMessage>;

  /**
   * The signing request for the operation.
   */
  signingRequest: SigningRequest;
}

export interface GenerateDeactivateDIDRequestOptions {
  /**
   * The DID to deactivate
   */
  did: string;
}

export interface SubmitDeactivateDIDRequestOptions
  extends CommonRegistrarOptions {
  /**
   * Current state of the operation, generated by the `generateDeactivateDIDRequest` function
   */
  state: RunnerState<DIDDeactivateMessage>;

  /**
   * The signature of the signing request
   */
  signature: Uint8Array;
}
