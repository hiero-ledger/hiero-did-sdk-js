name: Release

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

permissions:
  pull-requests: write
  contents: write

jobs:
  release:
    runs-on: ubuntu-latest
    name: Release
    steps:
      - name: Harden the runner (Audit all outbound calls)
        uses: step-security/harden-runner@ec9f2d5744a09debf3a187a3f4f675c53b671911 # v2.13.0
        with:
          egress-policy: audit

      - name: Checkout repository
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4.2.2

      - name: Set up Node and install dependencies
        uses: ./.github/actions/setup-npm-env

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@e0145edc7d9d8679003495b11f87bd8ef63c0cba # v1.5.3
        with:
          title: 'chore(release): new version'
          commit: 'chore(release): new version'
          publish: pnpm release
          version: pnpm changeset-version
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Get current package version
        id: get_version
        run: echo "CURRENT_PACKAGE_VERSION=$(node -p "require('./packages/core/package.json').version")" >> $GITHUB_ENV

      - name: Create Github Release
        if: "startsWith(github.event.head_commit.message, 'chore(release): new version')"
        uses: step-security/action-gh-release@2677a32b1ab8b24324ede3be9da4e1d8c3f686ee # v2.3.2
        with:
          tag_name: v${{ env.CURRENT_PACKAGE_VERSION }}